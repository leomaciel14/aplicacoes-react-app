{"ast":null,"code":"var _jsxFileName = \"/home/leoboeira/Desktop/Git-Hub/Formacao-Desenvolvedor-Full-Stack/Aulas/Modulo-03/01_React/my-app/src/KanbanBoard.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { KanbanColumn } from './KanbanColumn';\nconst initialColumns = {\n  todo: {\n    name: 'A Fazer',\n    items: []\n  },\n  inProgress: {\n    name: 'In Progress',\n    items: []\n  },\n  done: {\n    name: 'Done',\n    items: []\n  }\n};\nexport const KanbanBoard = () => {\n  const [columns, setColumns] = useState(initialColumns);\n  const addTask = (columnId, taskContent) => {\n    const newTask = {\n      id: Date.now(),\n      content: taskContent\n    };\n    setColumns({\n      ...columns,\n      [columnId]: {\n        ...columns[columnId],\n        items: [...columns[columnId].items, newTask]\n      }\n    });\n  };\n  const removeTask = (columnId, taskId) => {\n    setColumns({\n      ...columns,\n      [columnId]: {\n        ...columns[columnId],\n        items: columns[columnId].items.filter(task => task.id !== taskId)\n      }\n    });\n  };\n  const moveTask = (fromColumnId, toColumnId, taskId) => {\n    const task = columns[fromColumnId].items.find(task => task.id === taskId);\n    setColumns({\n      ...columns,\n      [fromColumnId]: {\n        ...columns[fromColumnId],\n        items: columns[fromColumnId].items.filter(task => task.id !== taskId)\n      },\n      [toColumnId]: {\n        ...columns[toColumnId],\n        items: [...columns[toColumnId].items, task]\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(BoardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/React.createElement(KanbanColumn, {\n    key: columnId,\n    columnId: columnId,\n    column: column,\n    addTask: addTask,\n    removeTask: removeTask,\n    moveTask: moveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })));\n};\nconst BoardContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding: 20px;\n`;","map":{"version":3,"names":["React","useState","styled","KanbanColumn","initialColumns","todo","name","items","inProgress","done","KanbanBoard","columns","setColumns","addTask","columnId","taskContent","newTask","id","Date","now","content","removeTask","taskId","filter","task","moveTask","fromColumnId","toColumnId","find","createElement","BoardContainer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","column","key","div"],"sources":["/home/leoboeira/Desktop/Git-Hub/Formacao-Desenvolvedor-Full-Stack/Aulas/Modulo-03/01_React/my-app/src/KanbanBoard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { KanbanColumn } from './KanbanColumn';\n\nconst initialColumns = {\n    todo: {\n        name: 'A Fazer',\n        items: []\n    },\n    inProgress: {\n        name: 'In Progress',\n        items: []\n    },\n    done: {\n        name: 'Done',\n        items: []\n    }\n};\n\nexport const KanbanBoard = () => {\n    const [columns, setColumns] = useState(initialColumns);\n\n    const addTask = (columnId, taskContent) => {\n        const newTask = { id: Date.now(), content: taskContent };\n        setColumns({\n            ...columns,\n            [columnId]: {\n                ...columns[columnId],\n                items: [...columns[columnId].items, newTask]\n            }\n        });\n    };\n\n    const removeTask = (columnId, taskId) => {\n        setColumns({\n            ...columns,\n            [columnId]: {\n                ...columns[columnId],\n                items: columns[columnId].items.filter(task => task.id !== taskId)\n            }\n        });\n    };\n\n    const moveTask = (fromColumnId, toColumnId, taskId) => {\n        const task = columns[fromColumnId].items.find(task => task.id === taskId);\n        setColumns({\n            ...columns,\n            [fromColumnId]: {\n                ...columns[fromColumnId],\n                items: columns[fromColumnId].items.filter(task => task.id !== taskId)\n            },\n            [toColumnId]: {\n                ...columns[toColumnId],\n                items: [...columns[toColumnId].items, task]\n            }\n        });\n    };\n\n    return (\n        <BoardContainer>\n            {Object.entries(columns).map(([columnId, column]) => (\n                <KanbanColumn\n                    key={columnId}\n                    columnId={columnId}\n                    column={column}\n                    addTask={addTask}\n                    removeTask={removeTask}\n                    moveTask={moveTask}\n                />\n            ))}\n        </BoardContainer>\n    );\n};\n\nconst BoardContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding: 20px;\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}